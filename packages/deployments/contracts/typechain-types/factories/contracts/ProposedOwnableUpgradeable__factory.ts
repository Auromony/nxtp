/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ProposedOwnableUpgradeable,
  ProposedOwnableUpgradeableInterface,
} from "../../contracts/ProposedOwnableUpgradeable";

const _abi = [
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__acceptProposedOwner_030",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__acceptProposedOwner_038",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__onlyOwner_029",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__onlyProposed_035",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__proposeAssetOwnershipRenunciation_038",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__proposeNewOwner_036",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__proposeNewOwner_038",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__proposeRouterOwnershipRenunciation_038",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__renounceAssetOwnership_030",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__renounceAssetOwnership_037",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__renounceAssetOwnership_038",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__renounceOwnership_030",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__renounceOwnership_036",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__renounceOwnership_037",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__renounceRouterOwnership_030",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__renounceRouterOwnership_037",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__renounceRouterOwnership_038",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "renounced",
        type: "bool",
      },
    ],
    name: "AssetOwnershipRenounced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AssetOwnershipRenunciationProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "renounced",
        type: "bool",
      },
    ],
    name: "RouterOwnershipRenounced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "RouterOwnershipRenunciationProposed",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assetOwnershipTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isAssetOwnershipRenounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isRouterOwnershipRenounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposeAssetOwnershipRenunciation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposeRouterOwnershipRenunciation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceAssetOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceRouterOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "routerOwnershipTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class ProposedOwnableUpgradeable__factory {
  static readonly abi = _abi;
  static createInterface(): ProposedOwnableUpgradeableInterface {
    return new utils.Interface(_abi) as ProposedOwnableUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProposedOwnableUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ProposedOwnableUpgradeable;
  }
}
